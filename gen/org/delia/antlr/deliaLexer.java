// Generated from C:/Users/16136/Documents/GitHub/delia/delia-antlr/src/test/java/org/delia/antlr\delia.g4 by ANTLR 4.9.1
package org.delia.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class deliaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, BEGF=36, ENDF=37, BEGPAREN=38, 
		ENDPAREN=39, TRUE=40, FALSE=41, NULL=42, SEP=43, DOT=44, NOT=45, SYMBOL=46, 
		DOLLAR=47, NUM=48, COMMENT=49, LINE_COMMENT=50, FloatingPointLiteral=51, 
		StringLiteral=52, StringLiteral2=53, HexDigit=54, WS=55;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "BEGF", "ENDF", "BEGPAREN", "ENDPAREN", "TRUE", "FALSE", 
			"NULL", "SEP", "DOT", "NOT", "SYMBOL", "DOLLAR", "NUM", "COMMENT", "LINE_COMMENT", 
			"FloatingPointLiteral", "Exponent", "StringLiteral", "StringLiteral2", 
			"EscapeSequence", "EscapeSequence2", "OctalEscape", "UnicodeEscape", 
			"HexDigit", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'configure'", "'='", "'schema'", "'off'", "'log'", "'type'", "'end'", 
			"'{'", "'}'", "'relation'", "'optional'", "'unique'", "'primaryKey'", 
			"'serial'", "'one'", "'many'", "'parent'", "'insert'", "':'", "'update'", 
			"'delete'", "'upsert'", "'-noUpdate'", "'let'", "'in'", "'=='", "'!='", 
			"'<'", "'<='", "'>'", "'>='", "'like'", "'and'", "'or'", "'-'", "'['", 
			"']'", "'('", "')'", "'true'", "'false'", "'null'", "','", "'.'", "'!'", 
			null, "'$'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"BEGF", "ENDF", "BEGPAREN", "ENDPAREN", "TRUE", "FALSE", "NULL", "SEP", 
			"DOT", "NOT", "SYMBOL", "DOLLAR", "NUM", "COMMENT", "LINE_COMMENT", "FloatingPointLiteral", 
			"StringLiteral", "StringLiteral2", "HexDigit", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public deliaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "delia.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\29\u01dd\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b"+
		"\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25"+
		"\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3!\3\"\3"+
		"\"\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3)\3)\3*"+
		"\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\6/\u014b\n/\r/\16"+
		"/\u014c\3/\7/\u0150\n/\f/\16/\u0153\13/\3\60\3\60\3\61\6\61\u0158\n\61"+
		"\r\61\16\61\u0159\3\62\3\62\3\62\3\62\7\62\u0160\n\62\f\62\16\62\u0163"+
		"\13\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\7\63\u016e\n\63\f"+
		"\63\16\63\u0171\13\63\3\63\3\63\3\64\6\64\u0176\n\64\r\64\16\64\u0177"+
		"\3\64\3\64\7\64\u017c\n\64\f\64\16\64\u017f\13\64\3\64\5\64\u0182\n\64"+
		"\3\64\3\64\6\64\u0186\n\64\r\64\16\64\u0187\3\64\5\64\u018b\n\64\3\64"+
		"\6\64\u018e\n\64\r\64\16\64\u018f\3\64\3\64\6\64\u0194\n\64\r\64\16\64"+
		"\u0195\5\64\u0198\n\64\3\65\3\65\5\65\u019c\n\65\3\65\6\65\u019f\n\65"+
		"\r\65\16\65\u01a0\3\66\3\66\3\66\7\66\u01a6\n\66\f\66\16\66\u01a9\13\66"+
		"\3\66\3\66\3\67\3\67\3\67\7\67\u01b0\n\67\f\67\16\67\u01b3\13\67\3\67"+
		"\3\67\38\38\38\38\58\u01bb\n8\39\39\39\39\59\u01c1\n9\3:\3:\3:\3:\3:\3"+
		":\3:\3:\3:\5:\u01cc\n:\3;\3;\3;\3;\3;\3;\3;\3<\3<\3=\6=\u01d8\n=\r=\16"+
		"=\u01d9\3=\3=\3\u0161\2>\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\2k\66m\67o\2q\2s\2u\2w8y9\3\2\16\5\2C\\aac|\6\2\62;C\\a"+
		"ac|\3\2\62;\4\2\f\f\17\17\4\2GGgg\4\2--//\4\2$$^^\4\2))^^\t\2$$^^ddhh"+
		"ppttvv\t\2))^^ddhhppttvv\5\2\62;CHch\5\2\13\f\17\17\"\"\2\u01f3\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2w\3\2\2\2\2y"+
		"\3\2\2\2\3{\3\2\2\2\5\u0085\3\2\2\2\7\u0087\3\2\2\2\t\u008e\3\2\2\2\13"+
		"\u0092\3\2\2\2\r\u0096\3\2\2\2\17\u009b\3\2\2\2\21\u009f\3\2\2\2\23\u00a1"+
		"\3\2\2\2\25\u00a3\3\2\2\2\27\u00ac\3\2\2\2\31\u00b5\3\2\2\2\33\u00bc\3"+
		"\2\2\2\35\u00c7\3\2\2\2\37\u00ce\3\2\2\2!\u00d2\3\2\2\2#\u00d7\3\2\2\2"+
		"%\u00de\3\2\2\2\'\u00e5\3\2\2\2)\u00e7\3\2\2\2+\u00ee\3\2\2\2-\u00f5\3"+
		"\2\2\2/\u00fc\3\2\2\2\61\u0106\3\2\2\2\63\u010a\3\2\2\2\65\u010d\3\2\2"+
		"\2\67\u0110\3\2\2\29\u0113\3\2\2\2;\u0115\3\2\2\2=\u0118\3\2\2\2?\u011a"+
		"\3\2\2\2A\u011d\3\2\2\2C\u0122\3\2\2\2E\u0126\3\2\2\2G\u0129\3\2\2\2I"+
		"\u012b\3\2\2\2K\u012d\3\2\2\2M\u012f\3\2\2\2O\u0131\3\2\2\2Q\u0133\3\2"+
		"\2\2S\u0138\3\2\2\2U\u013e\3\2\2\2W\u0143\3\2\2\2Y\u0145\3\2\2\2[\u0147"+
		"\3\2\2\2]\u014a\3\2\2\2_\u0154\3\2\2\2a\u0157\3\2\2\2c\u015b\3\2\2\2e"+
		"\u0169\3\2\2\2g\u0197\3\2\2\2i\u0199\3\2\2\2k\u01a2\3\2\2\2m\u01ac\3\2"+
		"\2\2o\u01ba\3\2\2\2q\u01c0\3\2\2\2s\u01cb\3\2\2\2u\u01cd\3\2\2\2w\u01d4"+
		"\3\2\2\2y\u01d7\3\2\2\2{|\7e\2\2|}\7q\2\2}~\7p\2\2~\177\7h\2\2\177\u0080"+
		"\7k\2\2\u0080\u0081\7i\2\2\u0081\u0082\7w\2\2\u0082\u0083\7t\2\2\u0083"+
		"\u0084\7g\2\2\u0084\4\3\2\2\2\u0085\u0086\7?\2\2\u0086\6\3\2\2\2\u0087"+
		"\u0088\7u\2\2\u0088\u0089\7e\2\2\u0089\u008a\7j\2\2\u008a\u008b\7g\2\2"+
		"\u008b\u008c\7o\2\2\u008c\u008d\7c\2\2\u008d\b\3\2\2\2\u008e\u008f\7q"+
		"\2\2\u008f\u0090\7h\2\2\u0090\u0091\7h\2\2\u0091\n\3\2\2\2\u0092\u0093"+
		"\7n\2\2\u0093\u0094\7q\2\2\u0094\u0095\7i\2\2\u0095\f\3\2\2\2\u0096\u0097"+
		"\7v\2\2\u0097\u0098\7{\2\2\u0098\u0099\7r\2\2\u0099\u009a\7g\2\2\u009a"+
		"\16\3\2\2\2\u009b\u009c\7g\2\2\u009c\u009d\7p\2\2\u009d\u009e\7f\2\2\u009e"+
		"\20\3\2\2\2\u009f\u00a0\7}\2\2\u00a0\22\3\2\2\2\u00a1\u00a2\7\177\2\2"+
		"\u00a2\24\3\2\2\2\u00a3\u00a4\7t\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7"+
		"n\2\2\u00a6\u00a7\7c\2\2\u00a7\u00a8\7v\2\2\u00a8\u00a9\7k\2\2\u00a9\u00aa"+
		"\7q\2\2\u00aa\u00ab\7p\2\2\u00ab\26\3\2\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae"+
		"\7r\2\2\u00ae\u00af\7v\2\2\u00af\u00b0\7k\2\2\u00b0\u00b1\7q\2\2\u00b1"+
		"\u00b2\7p\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7n\2\2\u00b4\30\3\2\2\2\u00b5"+
		"\u00b6\7w\2\2\u00b6\u00b7\7p\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9\7s\2\2"+
		"\u00b9\u00ba\7w\2\2\u00ba\u00bb\7g\2\2\u00bb\32\3\2\2\2\u00bc\u00bd\7"+
		"r\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0\7o\2\2\u00c0\u00c1"+
		"\7c\2\2\u00c1\u00c2\7t\2\2\u00c2\u00c3\7{\2\2\u00c3\u00c4\7M\2\2\u00c4"+
		"\u00c5\7g\2\2\u00c5\u00c6\7{\2\2\u00c6\34\3\2\2\2\u00c7\u00c8\7u\2\2\u00c8"+
		"\u00c9\7g\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7c\2\2"+
		"\u00cc\u00cd\7n\2\2\u00cd\36\3\2\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0\7"+
		"p\2\2\u00d0\u00d1\7g\2\2\u00d1 \3\2\2\2\u00d2\u00d3\7o\2\2\u00d3\u00d4"+
		"\7c\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6\7{\2\2\u00d6\"\3\2\2\2\u00d7\u00d8"+
		"\7r\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7g\2\2\u00db"+
		"\u00dc\7p\2\2\u00dc\u00dd\7v\2\2\u00dd$\3\2\2\2\u00de\u00df\7k\2\2\u00df"+
		"\u00e0\7p\2\2\u00e0\u00e1\7u\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7t\2\2"+
		"\u00e3\u00e4\7v\2\2\u00e4&\3\2\2\2\u00e5\u00e6\7<\2\2\u00e6(\3\2\2\2\u00e7"+
		"\u00e8\7w\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7f\2\2\u00ea\u00eb\7c\2\2"+
		"\u00eb\u00ec\7v\2\2\u00ec\u00ed\7g\2\2\u00ed*\3\2\2\2\u00ee\u00ef\7f\2"+
		"\2\u00ef\u00f0\7g\2\2\u00f0\u00f1\7n\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3"+
		"\7v\2\2\u00f3\u00f4\7g\2\2\u00f4,\3\2\2\2\u00f5\u00f6\7w\2\2\u00f6\u00f7"+
		"\7r\2\2\u00f7\u00f8\7u\2\2\u00f8\u00f9\7g\2\2\u00f9\u00fa\7t\2\2\u00fa"+
		"\u00fb\7v\2\2\u00fb.\3\2\2\2\u00fc\u00fd\7/\2\2\u00fd\u00fe\7p\2\2\u00fe"+
		"\u00ff\7q\2\2\u00ff\u0100\7W\2\2\u0100\u0101\7r\2\2\u0101\u0102\7f\2\2"+
		"\u0102\u0103\7c\2\2\u0103\u0104\7v\2\2\u0104\u0105\7g\2\2\u0105\60\3\2"+
		"\2\2\u0106\u0107\7n\2\2\u0107\u0108\7g\2\2\u0108\u0109\7v\2\2\u0109\62"+
		"\3\2\2\2\u010a\u010b\7k\2\2\u010b\u010c\7p\2\2\u010c\64\3\2\2\2\u010d"+
		"\u010e\7?\2\2\u010e\u010f\7?\2\2\u010f\66\3\2\2\2\u0110\u0111\7#\2\2\u0111"+
		"\u0112\7?\2\2\u01128\3\2\2\2\u0113\u0114\7>\2\2\u0114:\3\2\2\2\u0115\u0116"+
		"\7>\2\2\u0116\u0117\7?\2\2\u0117<\3\2\2\2\u0118\u0119\7@\2\2\u0119>\3"+
		"\2\2\2\u011a\u011b\7@\2\2\u011b\u011c\7?\2\2\u011c@\3\2\2\2\u011d\u011e"+
		"\7n\2\2\u011e\u011f\7k\2\2\u011f\u0120\7m\2\2\u0120\u0121\7g\2\2\u0121"+
		"B\3\2\2\2\u0122\u0123\7c\2\2\u0123\u0124\7p\2\2\u0124\u0125\7f\2\2\u0125"+
		"D\3\2\2\2\u0126\u0127\7q\2\2\u0127\u0128\7t\2\2\u0128F\3\2\2\2\u0129\u012a"+
		"\7/\2\2\u012aH\3\2\2\2\u012b\u012c\7]\2\2\u012cJ\3\2\2\2\u012d\u012e\7"+
		"_\2\2\u012eL\3\2\2\2\u012f\u0130\7*\2\2\u0130N\3\2\2\2\u0131\u0132\7+"+
		"\2\2\u0132P\3\2\2\2\u0133\u0134\7v\2\2\u0134\u0135\7t\2\2\u0135\u0136"+
		"\7w\2\2\u0136\u0137\7g\2\2\u0137R\3\2\2\2\u0138\u0139\7h\2\2\u0139\u013a"+
		"\7c\2\2\u013a\u013b\7n\2\2\u013b\u013c\7u\2\2\u013c\u013d\7g\2\2\u013d"+
		"T\3\2\2\2\u013e\u013f\7p\2\2\u013f\u0140\7w\2\2\u0140\u0141\7n\2\2\u0141"+
		"\u0142\7n\2\2\u0142V\3\2\2\2\u0143\u0144\7.\2\2\u0144X\3\2\2\2\u0145\u0146"+
		"\7\60\2\2\u0146Z\3\2\2\2\u0147\u0148\7#\2\2\u0148\\\3\2\2\2\u0149\u014b"+
		"\t\2\2\2\u014a\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014a\3\2\2\2\u014c"+
		"\u014d\3\2\2\2\u014d\u0151\3\2\2\2\u014e\u0150\t\3\2\2\u014f\u014e\3\2"+
		"\2\2\u0150\u0153\3\2\2\2\u0151\u014f\3\2\2\2\u0151\u0152\3\2\2\2\u0152"+
		"^\3\2\2\2\u0153\u0151\3\2\2\2\u0154\u0155\7&\2\2\u0155`\3\2\2\2\u0156"+
		"\u0158\t\4\2\2\u0157\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u0157\3\2"+
		"\2\2\u0159\u015a\3\2\2\2\u015ab\3\2\2\2\u015b\u015c\7\61\2\2\u015c\u015d"+
		"\7,\2\2\u015d\u0161\3\2\2\2\u015e\u0160\13\2\2\2\u015f\u015e\3\2\2\2\u0160"+
		"\u0163\3\2\2\2\u0161\u0162\3\2\2\2\u0161\u015f\3\2\2\2\u0162\u0164\3\2"+
		"\2\2\u0163\u0161\3\2\2\2\u0164\u0165\7,\2\2\u0165\u0166\7\61\2\2\u0166"+
		"\u0167\3\2\2\2\u0167\u0168\b\62\2\2\u0168d\3\2\2\2\u0169\u016a\7\61\2"+
		"\2\u016a\u016b\7\61\2\2\u016b\u016f\3\2\2\2\u016c\u016e\n\5\2\2\u016d"+
		"\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3\2\2\2\u016f\u0170\3\2"+
		"\2\2\u0170\u0172\3\2\2\2\u0171\u016f\3\2\2\2\u0172\u0173\b\63\2\2\u0173"+
		"f\3\2\2\2\u0174\u0176\4\62;\2\u0175\u0174\3\2\2\2\u0176\u0177\3\2\2\2"+
		"\u0177\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017d"+
		"\7\60\2\2\u017a\u017c\4\62;\2\u017b\u017a\3\2\2\2\u017c\u017f\3\2\2\2"+
		"\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0181\3\2\2\2\u017f\u017d"+
		"\3\2\2\2\u0180\u0182\5i\65\2\u0181\u0180\3\2\2\2\u0181\u0182\3\2\2\2\u0182"+
		"\u0198\3\2\2\2\u0183\u0185\7\60\2\2\u0184\u0186\4\62;\2\u0185\u0184\3"+
		"\2\2\2\u0186\u0187\3\2\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188"+
		"\u018a\3\2\2\2\u0189\u018b\5i\65\2\u018a\u0189\3\2\2\2\u018a\u018b\3\2"+
		"\2\2\u018b\u0198\3\2\2\2\u018c\u018e\4\62;\2\u018d\u018c\3\2\2\2\u018e"+
		"\u018f\3\2\2\2\u018f\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u0191\3\2"+
		"\2\2\u0191\u0198\5i\65\2\u0192\u0194\4\62;\2\u0193\u0192\3\2\2\2\u0194"+
		"\u0195\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0198\3\2"+
		"\2\2\u0197\u0175\3\2\2\2\u0197\u0183\3\2\2\2\u0197\u018d\3\2\2\2\u0197"+
		"\u0193\3\2\2\2\u0198h\3\2\2\2\u0199\u019b\t\6\2\2\u019a\u019c\t\7\2\2"+
		"\u019b\u019a\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019e\3\2\2\2\u019d\u019f"+
		"\4\62;\2\u019e\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u019e\3\2\2\2\u01a0"+
		"\u01a1\3\2\2\2\u01a1j\3\2\2\2\u01a2\u01a7\7$\2\2\u01a3\u01a6\5o8\2\u01a4"+
		"\u01a6\n\b\2\2\u01a5\u01a3\3\2\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01a9\3\2"+
		"\2\2\u01a7\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01aa\3\2\2\2\u01a9"+
		"\u01a7\3\2\2\2\u01aa\u01ab\7$\2\2\u01abl\3\2\2\2\u01ac\u01b1\7)\2\2\u01ad"+
		"\u01b0\5q9\2\u01ae\u01b0\n\t\2\2\u01af\u01ad\3\2\2\2\u01af\u01ae\3\2\2"+
		"\2\u01b0\u01b3\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b4"+
		"\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4\u01b5\7)\2\2\u01b5n\3\2\2\2\u01b6\u01b7"+
		"\7^\2\2\u01b7\u01bb\t\n\2\2\u01b8\u01bb\5u;\2\u01b9\u01bb\5s:\2\u01ba"+
		"\u01b6\3\2\2\2\u01ba\u01b8\3\2\2\2\u01ba\u01b9\3\2\2\2\u01bbp\3\2\2\2"+
		"\u01bc\u01bd\7^\2\2\u01bd\u01c1\t\13\2\2\u01be\u01c1\5u;\2\u01bf\u01c1"+
		"\5s:\2\u01c0\u01bc\3\2\2\2\u01c0\u01be\3\2\2\2\u01c0\u01bf\3\2\2\2\u01c1"+
		"r\3\2\2\2\u01c2\u01c3\7^\2\2\u01c3\u01c4\4\62\65\2\u01c4\u01c5\4\629\2"+
		"\u01c5\u01cc\4\629\2\u01c6\u01c7\7^\2\2\u01c7\u01c8\4\629\2\u01c8\u01cc"+
		"\4\629\2\u01c9\u01ca\7^\2\2\u01ca\u01cc\4\629\2\u01cb\u01c2\3\2\2\2\u01cb"+
		"\u01c6\3\2\2\2\u01cb\u01c9\3\2\2\2\u01cct\3\2\2\2\u01cd\u01ce\7^\2\2\u01ce"+
		"\u01cf\7w\2\2\u01cf\u01d0\5w<\2\u01d0\u01d1\5w<\2\u01d1\u01d2\5w<\2\u01d2"+
		"\u01d3\5w<\2\u01d3v\3\2\2\2\u01d4\u01d5\t\f\2\2\u01d5x\3\2\2\2\u01d6\u01d8"+
		"\t\r\2\2\u01d7\u01d6\3\2\2\2\u01d8\u01d9\3\2\2\2\u01d9\u01d7\3\2\2\2\u01d9"+
		"\u01da\3\2\2\2\u01da\u01db\3\2\2\2\u01db\u01dc\b=\2\2\u01dcz\3\2\2\2\32"+
		"\2\u014c\u0151\u0159\u0161\u016f\u0177\u017d\u0181\u0187\u018a\u018f\u0195"+
		"\u0197\u019b\u01a0\u01a5\u01a7\u01af\u01b1\u01ba\u01c0\u01cb\u01d9\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}