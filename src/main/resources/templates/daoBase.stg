

t1() ::= <<
import org.delia.DeliaSession;
import org.delia.dao.EntityDaoBase;
import org.delia.runner.ResultValue;
import org.delia.type.DValue;
import org.platframework.dao.PagedList;
import java.util.*;

>>


t2(cname,iname,bname,itname,immutname) ::= <<
  public class <cname> extends <bname><itname> {

    public <cname>(DeliaSession session) {
		super(session, "<iname>");
	}
    
	public <iname> findById(int id) {
		return doFindById(id);
	}
	public DValue insert(<iname> entity) {
		return doInsert(entity);
	}
	
	public PagedList<itname> findPage(int pgNum, int pgSize, long totalSize) {
		return findPage("true", pgNum, pgSize, totalSize);
	}
	public PagedList<itname> findPage(String filter, int pgNum, int pgSize, long totalSize) {
		int iStart = pgNum * pgSize;
		String src = String.format("%s[%s].offset(%d).limit(%d).orderBy('id')", typeName, filter, iStart, pgSize); //TODO add orderBy, offset, etc.
		ResultValue res = doQuery(src);
		List<itname> tmpL = createImmutList(res); //TODO optimize. only create items needed for page
		
		PagedList<itname> list = new PagedList<itname>(pgNum, pgSize);
		list.totalSize = (int)totalSize;
		list.list = tmpL;
		
		return list;
	}
	
	public long getCount() {
		String src = String.format("%s[true].count()", typeName);
		ResultValue res = doQuery(src);
		Long count = res.getAsDValue().asLong();
		return count;
	}
	

	@Override
	protected <iname> createImmutFromDVal(DValue dval) {
		if (dval == null) {
			return null;
		}
		return new <immutname>(dval);
	}
	
	public void deleteAll() {
		doDeleteAll();
	}
	

>>

