# crud insert

FEATURE: insert a parent fk
background:
  type Customer struct {id int primaryKey, name string,
      relation workers Address 'r1' many optional,
  }  end
  type Address struct {sid string primaryKey, city string,
      relation manager Customer 'r1' one optional,
  }  end
  insert Customer {id: 55, name: 'art' }
  insert Address  {sid: '100', city: 'kingston' }
thenType: struct

---
title: basic
given:
when:
  let x = Customer[55]
then:
value:a:Customer {
 vid:55
 vname:'art'
 vmanager:null
 vworkers:null
}

---
title: add worker,fks
given:
  insert Customer {id: 56, name: 'bob', workers: '100' }
when:
  let x = Customer[55].fks().orderBy('id')
then:
value:a:Customer {
 vid:55
 vname:'art'
 vworkers:{'100'}
}
value:a:Customer {
 vid:56
 vname:'bob'
 vmanager:null
  vworkers:{55}
}

---
title: add worker
given:
  insert Customer {id: 56, name: 'bob', workers: '100' }
when:
  let x = Customer[55].orderBy('id')
then:
value:a:Customer {
 vid:55
 vname:'art'
 vmanager:null
 vworkers:null
}
value:a:Customer {
 vid:56
 vname:'bob'
 vmanager:null
  vworkers:null
}

---
title: add manager
given:
  insert Address {id: '101', city: 'ottawa', manager: 55 }
when:
  let x = Customer[55].orderBy('id')
then:
value:a:Customer {
 vid:55
 vname:'art'
 vmanager:null
 vworkers:null
}
value:a:Customer {
 vid:56
 vname:'bob'
 vmanager:{55}
  vworkers:null
}
