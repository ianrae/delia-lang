# let queryfn when relations
# count, exist, min, max, first, last
FEATURE: one-to-one parent
background:
 configure loadFKs = true
 type Customer struct {id int unique, relation addr Address one optional parent } end
 type Address struct {id int unique, relation cust Customer  one } end
 
thenType: struct

---
title: max
given:
  insert Customer {id: 55 }
  insert Customer {id: 56 }
when:
  let x = Customer[true].id.max()
then:
value:a:int:56

---
title: min
given:

  insert Customer {id: 55 }
  insert Customer {id: 56 }
when:
  let x = Customer[true].id.min()
then:
value:a:int:55

---
title: exist
given:

  insert Customer {id: 55 }
  insert Customer {id: 56 }
when:
  let x = Customer[true].id.exist()
then:
value:a:boolean:true

---
title: count
given:

  insert Customer {id: 55 }
  insert Customer {id: 56 }
when:
  let x = Customer[true].id.count()
then:
value:a:long:2

---
title: first
given:

  insert Customer {id: 55 }
  insert Customer {id: 56 }
when:
  let x = Customer[true].id.first()
then:
value:a:long:2
