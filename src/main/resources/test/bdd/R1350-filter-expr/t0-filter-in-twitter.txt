# let query filter like tests

FEATURE: filter- in expression for twitter. self-join
background:
  type User struct {id int primaryKey, name string,
      relation followers User 'r1' many optional,
      relation followees User 'r1' many optional,
      relation tweets Tweet many optional
      }  end
  type Tweet struct {id int primaryKey, text string 
      relation sender User one,
  }  end
thenType: struct

---
title: in
given:
  insert User {id: 55, wid: 'art' }
  insert User {id: 56, wid: 'bob' }
  insert User {id: 57, wid: 'cam' }
  insert Tweet {id: 1, text: 'tweet1', sender: 55 }
when:
  let x = Tweet[sender in [55]]
then:
value:a:Tweet {
 vid:1
 vtext:'tweet1'
 vsender:55
}

