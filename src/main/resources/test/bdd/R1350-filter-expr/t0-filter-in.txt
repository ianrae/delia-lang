# let query filter like tests

FEATURE: filter- in expression
background:
  type Flight struct {id int unique, wid string }  end
thenType: struct

---
title: in
given:
  insert Flight {id: 55, wid: 'battle' }
when:
  let x = Flight[id in [55]]
then:
value:a:Flight {
 vid:55
 vwid:'battle'
}

---
title: in none
given:
  insert Flight {id: 55, wid: 'battle' }
when:
  let x = Flight[id in [56]]
then:
null

---
title: in multi
given:
  insert Flight {id: 55, wid: 'battle' }
when:
  let x = Flight[id in [55,56]]
then:
value:a:Flight {
 vid:55
 vwid:'battle'
}

---
SKIP: in with and
given:
  insert Flight {id: 55, wid: 'battle' }
when:
  let x = Flight[id in [55,56] and id > 10]
then:
value:a:Flight {
 vid:55
 vwid:'battle'
}
