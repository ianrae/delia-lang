# CRUD update tests

FEATURE: CRUD update - many-to-many scenario 1 - all
background:
	type Customer struct {id int unique, wid int, relation addr Address optional many } end
	type Address struct {id int unique, z int, relation cust Customer optional many } end
	insert Customer {id: 55, wid: 33}
	insert Customer {id: 56, wid: 34}
	insert Address {id: 100, z:5, cust: [55,56] }
	insert Address {id: 101, z:6, cust: [55,56] }
thenType: struct

---
title: update without relation
thenType: int
expectDVal:false
when:
  update Customer[55] {wid: 333}
then:
1

---
title: update without relation query back
when:
  update Customer[55] {wid: 333}
  let x = Customer[55].fks()
then:
value:a:Customer {
 vid:55
 vwid:333
 vaddr:{[100,101]}
}

---
title: update many-to-many
thenType: int
expectDVal:false
when:
  update Customer[55] {wid: 333, addr: [100]}
then:
1

---
title: update query back
#TODO: this is wrong we should remove one row from assoc table
when:
  update Customer[55] {wid: 333, addr: [100]}
  let x = Customer[55].fks()
then:
value:a:Customer {
 vid:55
 vwid:333
 vaddr:{[100,100]}
}

