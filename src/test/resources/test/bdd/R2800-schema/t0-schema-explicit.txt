# struct tests

FEATURE: schema-explicit
background:
 configure loadFKs = true
thenType: struct

---
title: let
given:
 //type statement must use schema statement
 schema s2
 type Customer struct {id int primaryKey, relation addr Address optional one parent } end
 type Address struct {id int primaryKey, relation cust Customer optional one } end

  insert s2.Customer {id: 55 }
when:
  let x = s2.Customer[55]
then:
value:a:Customer {
 vid:55
 vaddr:null
}

---
title: update
given:
 schema s2
 type Customer struct {id int primaryKey, wid int, relation addr Address optional one parent } end
 type Address struct {id int primaryKey, relation cust Customer optional one } end

  insert s2.Customer {id: 55, wid:222 }
when:
  update s2.Customer[55] { wid:333 }
  let x = s2.Customer[55]
then:
value:a:Customer {
 vid:55
 vwid:333
 vaddr:null
}

---
title: upsert
given:
 schema s2
 type Customer struct {id int primaryKey, wid int, relation addr Address optional one parent } end
 type Address struct {id int primaryKey, relation cust Customer optional one } end

  insert s2.Customer {id: 55, wid:222 }
when:
  upsert s2.Customer[55] { wid:333 }
  let x = s2.Customer[55]
then:
value:a:Customer {
 vid:55
 vwid:333
 vaddr:null
}

---
title: delete
given:
 schema s2
 type Customer struct {id int primaryKey, wid int, relation addr Address optional one parent } end
 type Address struct {id int primaryKey, relation cust Customer optional one } end

  insert Customer {id: 55, wid:222 }
when:
  delete s2.Customer[55]
  let x = s2.Customer[55]
then:
null


