# crud insert

FEATURE: insert a parent fk (many to one)
background:
  type Customer struct {id int primaryKey, name string,
      relation workers Address 'r1' many optional,
  }  end
  type Address struct {sid string primaryKey, city string,
      relation manager Customer 'r1' one optional,
  }  end
  insert Customer {id: 55, name: 'art' }
  insert Address  {sid: '100', city: 'kingston' }
thenType: struct

---
title: add worker
given:
  insert Customer {id: 56, name: 'bob', workers: '100' }
when:
  let x = Address['100']
then:
value:a:Address {
 vsid:'100'
 vcity:'kingston'
 vmanager:{56}
}

---
title: add workers
given:
  insert Address  {sid: '101', city: 'ottawa' }
  insert Customer {id: 56, name: 'bob', workers: ['100','101'] }
when:
  let x = Address['100']
then:
value:a:Address {
 vsid:'100'
 vcity:'kingston'
 vmanager:{56}
}

---
title: add worker,query parent
given:
  insert Customer {id: 56, name: 'bob', workers: '100' }
when:
  let x = Customer[56]
then:
value:a:Customer {
 vid:56
 vname:'bob'
 vworkers:null
}

---
title: add worker,query parent fks
given:
  insert Customer {id: 56, name: 'bob', workers: '100' }
when:
  let x = Customer[56].fks()
then:
value:a:Customer {
 vid:56
 vname:'bob'
 vworkers:{100}
}

---
title: add worker,query parent fetch
given:
  insert Customer {id: 56, name: 'bob', workers: '100' }
when:
  let x = Customer[56].fetch('workers')
then:
value:a:Customer {
 vid:56
 vname:'bob'
 vworkers:{100:
  {
   vsid:'100'
   vcity:'kingston'
   vmanager:{56}
  }
 }
 }
